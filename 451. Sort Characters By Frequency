class Solution {
public:
    void fillVector(int sArray[26],int cArray[26],int dArray[26],string s)
    {
        int index;
        for(int i=0;i<s.length();i++)
        {
           if(s[i]>='a' && s[i]<='z')
           {
              index=s[i]-'a';
              sArray[index]++;
           }
           else if(s[i]>='A' && s[i]<='Z')
           {
                index=s[i]-'A';
                cArray[index]++;
           }
           else{
              index=s[i]-'0';
              dArray[index]++;
           }
        }
    }

    int findHighestfreq(int sArray[26],int cArray[26],int dArray[26])
    {
        int maxi=-1;
        for(int i=0;i<26;i++)
        {
           maxi=max(sArray[i],maxi);
        }
        for(int i=0;i<26;i++)
        {
           maxi=max(cArray[i],maxi);
        }
        for(int i=0;i<10;i++)
        {
           maxi=max(dArray[i],maxi);
        }
        return maxi;
    }
    string frequencySort(string s) {
        int sArray[26],cArray[26],dArray[10];
        fill_n(sArray,26,0);
        fill_n(cArray,26,0);
        fill_n(dArray,26,0);
        string ans;
        ans.resize(s.length());
        int ht,l=0;
        fillVector(sArray,cArray,dArray,s);
        cout<< endl;
        ht=findHighestfreq(sArray,cArray,dArray);

        for(int i=ht;i>0;i--)
        {
            for(int j=0;j<26;j++)
            {
              if(sArray[j]==i)
              {
                  for(int k=0;k<i;k++)
                  {
                      ans[l++]='a'+ j;
                  }
              }
            }

            for(int j=0;j<26;j++)
            {
                if(cArray[j]==i)
              {
                  for(int k=0;k<i;k++)
                  {
                      ans[l++]='A'+ j;
                  }
              }
            }

            for(int j=0;j<10;j++)
            {
                if(dArray[j]==i)
              {
                  for(int k=0;k<i;k++)
                  {
                      ans[l++]='0'+ j;
                  }
              }
            }
        }
        return ans;
    }
};
