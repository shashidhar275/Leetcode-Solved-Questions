class Solution {
public:
    int findMax(vector<vector<int>>& grid,int i,int j)
    {
        int maxi=INT32_MIN;
        maxi=max(grid[i][j],maxi);
        maxi=max(grid[i][j+1],maxi);
        maxi=max(grid[i][j+2],maxi);
        maxi=max(grid[i+1][j],maxi);
        maxi=max(grid[i+1][j+1],maxi);
        maxi=max(grid[i+1][j+2],maxi);
        maxi=max(grid[i+2][j],maxi);
        maxi=max(grid[i+2][j+1],maxi);
        maxi=max(grid[i+2][j+2],maxi);
        return maxi;
    }

    vector<vector<int>> largestLocal(vector<vector<int>>& grid) {
        int rows=grid.size(),cols=grid[0].size(),maxi;
        vector<vector<int>> ans(rows-2,vector<int> (cols-2));
        for(int i=0;i<rows-2;i++)
        {
            for(int j=0;j<cols-2;j++)
            {
               maxi=findMax(grid,i,j);
               ans[i][j]=maxi;
            } 
        }
        return ans;
    }
};
